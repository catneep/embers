@inherits ToggableComponent

<div class="dropdown @Status" @onclick="toggleState" @onfocusout="toggleState">
  <div class="dropdown-trigger">
    <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
      <span>
        @Placeholder
      </span>
      <span class="icon is-small">
        @* <i class="fas fa-angle-down" aria-hidden="true"></i> *@
        <i class="oi" data-glyph="chevron-bottom"></i>
      </span>
    </button>
  </div>
  <div class="dropdown-menu" id="dropdown-menu" role="menu">
    <div class="dropdown-content">
      @foreach (var item in Options)
      {
        if (item.Selected){
          <p class="dropdown-item is-active" @onclick=@(() => setSelected(item))>
            @item
          </p>
        } else {
          <p class="dropdown-item" @onclick=@(() => setSelected(item))>
            @item
          </p>
        }
      }
    </div>
  </div>
</div>

@code{
  private class _item{
    public string Name { get; set; }
    public bool Selected { get; set; } = false;
  }
  [Parameter] public string Placeholder {get; set;} = "Select an option";
  [Parameter] public List<string> Items {get; set;}
  private List<_item> Options;
  public int Index { get; set; } = -1;
  protected override void OnInitialized()
  {
    Options = new List<_item>();
    foreach (var item in Items)
    {
      Options.Add(new _item{Name = item});
    }
  }
  private async Task setSelected(_item item){
    Index = Items.IndexOf(item.Name);
    Placeholder = item.Name;
    item.Selected = true;
    await toggleState();
    StateHasChanged();
  }

}